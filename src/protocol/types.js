import { uuid } from '../types/uuid.js';
import { bool } from '../types/bool.js';
import { bit, varbit, bytea } from '../types/bin.js';
import { unknown } from '../types/unknown.js';
import { json, jsonb } from '../types/json.js';
import { record } from '../types/record/type.js';
import { voidType } from '../types/void.js';
import { typeArrayOf } from '../types/array/type.js';
import { date, time, timestamp, timestamptz, interval } from '../types/date.js';
import {
  xml,
  text,
  char,
  name,
  varchar,
  aclitem,
  tsquery,
  tsvector,
  pgNodeTree,
} from '../types/text.js';
import {
  int2,
  int4,
  oid,
  xid,
  cid,
  int8,
  money,
  float4,
  float8,
  numeric,
  regproc,
} from '../types/number.js';
import {
  int4range,
  numrange,
  tsrange,
  tstzrange,
  daterange,
  int8range,
} from '../types/range.js';
import {
  box,
  cube,
  line,
  lseg,
  path,
  earth,
  point,
  circle,
  polygon,
} from '../types/geo.js';

export { unknown };
export { bytea as blob };

export const types = {
  16: bool,
  17: bytea,
  18: char,
  19: name,
  20: int8,
  21: int2,
  22: typeArrayOf(int2),
  23: int4,
  24: regproc,
  25: text,
  26: oid,
  28: xid,
  29: cid,
  30: typeArrayOf(oid),
  114: json,
  142: xml,
  143: typeArrayOf(xml),
  194: pgNodeTree,
  199: typeArrayOf(json),
  600: point,
  601: lseg,
  602: path,
  603: box,
  604: polygon,
  628: line,
  629: typeArrayOf(line),
  700: float4,
  701: float8,
  705: unknown,
  718: circle,
  719: typeArrayOf(circle),
  790: money,
  791: typeArrayOf(money),
  1000: typeArrayOf(bool),
  1001: typeArrayOf(bytea),
  1002: typeArrayOf(char),
  1003: typeArrayOf(name),
  1005: typeArrayOf(int2),
  1007: typeArrayOf(int4),
  1008: typeArrayOf(regproc),
  1009: typeArrayOf(text),
  1011: typeArrayOf(xid),
  1012: typeArrayOf(cid),
  1015: typeArrayOf(varchar),
  1016: typeArrayOf(int8),
  1017: typeArrayOf(point),
  1018: typeArrayOf(lseg),
  1019: typeArrayOf(path),
  1020: typeArrayOf(box),
  1021: typeArrayOf(float4),
  1022: typeArrayOf(float8),
  1028: typeArrayOf(oid),
  1033: aclitem,
  1034: typeArrayOf(aclitem),
  1043: varchar,
  1082: date,
  1083: time,
  1114: timestamp,
  1115: typeArrayOf(timestamp),
  1027: typeArrayOf(polygon),
  1183: typeArrayOf(time),
  1182: typeArrayOf(date),
  1184: timestamptz,
  1185: typeArrayOf(timestamptz),
  1186: interval,
  1187: typeArrayOf(interval),
  1231: typeArrayOf(numeric),
  1560: bit,
  1561: typeArrayOf(bit),
  1562: varbit,
  1563: typeArrayOf(varbit),
  1700: numeric,
  2249: record,
  2278: voidType,
  2287: typeArrayOf(record),
  2950: uuid,
  2951: typeArrayOf(uuid),
  3614: tsvector,
  3615: tsquery,
  3643: typeArrayOf(tsvector),
  3645: typeArrayOf(tsquery),
  3802: jsonb,
  3807: typeArrayOf(jsonb),
  3904: int4range,
  3905: typeArrayOf(int4range),
  3906: numrange,
  3907: typeArrayOf(numrange),
  3908: tsrange,
  3909: typeArrayOf(tsrange),
  3910: tstzrange,
  3911: typeArrayOf(tstzrange),
  3912: daterange,
  3913: typeArrayOf(daterange),
  3926: int8range,
  3927: typeArrayOf(int8range),
  16385: cube,
  16390: typeArrayOf(cube),
  16475: typeArrayOf(earth),
  16476: earth,
};
